%YAML 1.2
---
title: Adjust \c{RPL} Field of Segment Selector
validity: 16,32,64
opcode:
  - opcode: 63 /r
    mnemonic: ARPL \i{r/m16}, \i{r16}
    encoding: MR
    validity:
      16: invalid
      32: valid
      64: n/e
    description: Adjusts the \c{RPL} field of \abbr{r/m16} to be greater than or equal to the \c{RPL} field of \abbr{r16}.
encoding:
  operands: 2
  encodings:
    MR:
      - ModRM:r/m[rw]
      - ModRM:reg[r]
bitEncoding:
  list:
    - form: reg3(1) (src) against reg3(2) (dest)
      bits:
        - \c{0110 0011}
        - \c{11 reg3(1) reg3(2)}
    - form: reg3 (src) against memory
      bits:
        - \c{0110 0011}
        - \c{mod reg3 r/m}
description: >-
  The \c{ARPL} instruction compares the \c{RPL} (requested privilege level) field (bits 0 and 1) of two segment selectors.
  If the \c{RPL} field of the destination operand is less than the \c{RPL} field of the source operand, the \reg{ZF} flag is set and the \c{RPL} field of the destination is increased to match the source's.
  Otherwise, the \reg{ZF} flag is cleared and no change to the destination occurs.

  This instruction is is not valid in 16 bit mode, and, if encountered, the processor will raise a \c{#UD} exception.

  This instruction is not encodable in 64 bit mode, and, if encountered, will be treated as the \instr{MOVSXD} instruction.
operation: |-
  pub fn arpl(dest: u16, src: u16) {
    if dest[1..=0] < src[1..=0] {
      dest[1..=0] = src[1..=0];
      ZF = 1;
    } else {
      ZF = 0;
    }
  }
flags: >-
  The \reg{ZF} flag is set if the \c{RPL} field (bits 0 and 1) of the destination operand if less than that of the source operand.
  Otherwise, it is cleared.
exceptions:
  protected:
    "#GP(0)":
      - If the destination is located in a non-writable segment.
      - If a memory operand effective address is outside the \reg{CS}, \reg{DS}, \reg{ES}, \reg{FS}, or \reg{GS} segment limit.
      - If the \reg{DS}, \reg{ES}, \reg{FS}, or \reg{GS} register is used to access memory and it contains a \c{NULL} segment selector.
    "#SS(0)": If a memory operand effective address is outside the \reg{SS} segment limit.
    "#PF(fault-code)": If a page fault occurs.
    "#AC(0)": If alignment checking is enabled and an unaligned memory reference is made while the current privilege level is 3.
    "#UD": If the \instr{LOCK} prefix is used.
  real:
    "#UD": If in 16 bit mode.
  virtual:
    "#UD": If in 16 bit mode.
  compatibility: Same exceptions as in protected mode.
  long: Not encodable.
