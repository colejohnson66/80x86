%YAML 1.2
---
map:
  00: [ADD, Eb, Gb]
  01: [ADD, Ev, Gv]
  02: [ADD, Gb, Eb]
  03: [ADD, Gv, Ev]
  04: [ADD, AL, Ib]
  05: [ADD, rAX, Iz]
  06:
  07:
  08: [OR, Eb, Gb]
  09: [OR, Ev, Gv]
  0A: [OR, Gb, Eb]
  0B: [OR, Gv, Ev]
  0C: [OR, AL, Ib]
  0D: [OR, rAX, Iz]
  0E:
  # [0F] is two byte escape
  10: [ADC, Eb, Gb]
  11: [ADC, Ev, Gv]
  12: [ADC, Gb, Eb]
  13: [ADC, Gv, Ev]
  14: [ADC, AL, Ib]
  15: [ADC, rAX, Iz]
  16:
  17:
  18:
  19:
  1A:
  1B:
  1C:
  1D:
  1E:
  20: [AND, Eb, Gb]
  21: [AND, Ev, Gv]
  22: [AND, Gb, Eb]
  23: [AND, Gv, Ev]
  24: [AND, AL, Ib]
  25: [AND, rAX, Iz]
  26:
  27: [DAA]
  28:
  29:
  2A:
  2B:
  2C:
  2D:
  2E:
  2F: [DAS]
  30:
  31:
  32:
  33:
  34:
  35:
  36:
  37: [AAA]
  38: [CMP, Eb, Gb]
  39: [CMP, Ev, Gv]
  3A: [CMP, Gb, Eb]
  3B: [CMP, Gv, Ev]
  3C: [CMP, AL, Ib]
  3D: [CMP, rAX, Iz]
  3E:
  3F: [AAS]
  # [40-47] are in spans
  # [48-4F] are in spans
  50:
  51:
  52:
  53:
  54:
  55:
  56:
  57:
  58:
  59:
  5A:
  5B:
  5C:
  5D:
  5E:
  5F:
  60:
  61:
  62: [BOUND, Gv, Ma]
  63: [ARPL, Ew, Gw] # TODO: MOVSXD_GvEv somehow goes here also???
  64:
  65:
  66:
  67:
  68:
  69: [IMUL, Gv, Ev, Iv]
  6A:
  6B: [IMUL, Gv, Ev, Ib]
  6C: [INS, Yb, DX] # Aliased as INSB
  6D: [INS, Yz, DX] # Aliased as INSW/D
  6E: [OUTS, DX, Xb] # Aliased as OUTSB
  6F: [OUTS, DX, Xz] # Aliased as OUTSW/D
  # [70-7F] are in spans
  # [80-84] is in extensions
  85:
  86:
  87:
  88: [MOV, Eb, Gb]
  89: [MOV, Ev, Gv]
  8A: [MOV, Gb, Eb]
  8B: [MOV, Gv, Ev]
  8C: [MOV, Ev, Sw]
  8D: [LEA, Gv, M]
  8E: [MOV, Sw, Ev]
  8F:
  90: [NOP]
  91:
  92:
  93:
  94:
  95:
  96:
  97:
  # TODO: [98] is CBW/CWDE/CDQE
  # TODO: [99] is CWD/CDQ/CQO
  9A: [CALLF, Ap]
  9B:
  9C:
  9D:
  9E:
  9F: [LAHF]
  A0: [MOV, AL, Ob]
  A1: [MOV, rAX, Ov]
  A2: [MOV, Ob, AL]
  A3: [MOV, Ov, rAX]
  A4: [MOVS, Yb, Xb] # Aliased as MOVSB
  A5: [MOVS, Yv, Xv] # Aliased as MOVSW/D/Q
  A6: [CMPS, Xb, Yb] # or CMPSB
  A7: [CMPS, Xv, Yv] # or CMPS[WDQ]
  AC: [LODS, Xb] # Aliased as LODSB
  AD: [LODS, Xv] # Aliased as LODSW/D/Q
  AE:
  AF:
  # [B0-B7] are in spans
  # [B8-BF] are in spans
  C0:
  C1:
  C2:
  C3:
  C4: [LES, Sv, Mp]
  C5: [LDS, Sv, Mp]
  # [C6-C7] are in extensions
  C8: [ENTER, Iw, Ib]
  C9: [LEAVE]
  CA:
  CB:
  CC: [INT, "3"]
  CD: [INT, Ib]
  CE: [INTO]
  CF: [IRET]
  D0:
  D1:
  D2:
  D3:
  D4: [AAM, Ib]
  D5: [AAD, Ib]
  D6:
  D7:
  D8:
  D9:
  DA:
  DB:
  DC:
  DD:
  DE:
  DF:
  E0: [LOOPNE, Jb]
  E1: [LOOPE, Jb]
  E2: [LOOP, Jb]
  E3:
  E4: [IN, AL, Ib]
  E5: [IN, eAX, Ib]
  E6: [OUT, Ib, AL]
  E7: [OUT, Ib, eAX]
  E8: [CALL, Jv]
  E9: [JMP, Jv]
  EA: [JMPF, Ap]
  EB: [JMP, Jb]
  EC: [IN, AL, DX]
  ED: [IN, eAX, DX]
  EE: [OUT, DX, AL]
  EF: [OUT, DX, eAX]
  F0: [LOCK]
  F1: [INT, "1"]
  F2:
  F3:
  F4: [HLT]
  F5: [CMC]
  # [F6-F7] is in extensions
  F8: [CLC]
  F9:
  FA: [CLI]
  FB:
  FC: [CLD]
  FD:
  # [FE-FF] is in extensions
spans:
  40:
    length: 8
    instr: [INC, Zz]
  48:
    length: 8
    instr: [DEC, Zz]
  70:
    length: 16
    instr: [Jcc, Jb]
  B0:
    length: 8
    instr: [MOV, Zb, Ib]
  B8:
    length: 8
    instr: [MOV, Zv, Iz]
extensions:
  80:
    form: /r
    /0: [ADD, Eb, Ib]
    /1: [OR, Eb, Ib]
    /2: [ADC, Eb, Ib]
    /4: [AND, Eb, Ib]
    /7: [CMP, Eb, Ib]
  81:
    form: /r
    /0: [ADD, Ev, Iv]
    /1: [OR, Ev, Iv]
    /2: [ADC, Ev, Iv]
    /4: [AND, Ev, Iv]
    /7: [CMP, Ev, Iv]
  82:
    form: /r
    /0: [ADD, Eb, Ib]
    /1: [OR, Eb, Ib]
    /2: [ADC, Eb, Ib]
    /4: [AND, Eb, Ib]
    /7: [CMP, Eb, Ib]
  83:
    form: /r
    /0: [ADD, Ev, Ib]
    /1: [OR, Ev, Ib]
    /2: [ADC, Ev, Ib]
    /4: [AND, Ev, Ib]
    /7: [CMP, Ev, Ib]
  C6:
    form: /r
    /0: [MOV, Eb, Ib]
  C7:
    form: /r
    /0: [MOV, Ev, Iz]
  F6:
    form: /r
    /2: [NOT, Eb]
    /3: [NEG, Eb]
    /4: [MUL, Eb]
    /5: [IMUL, Eb]
    /6: [DIV, Eb]
    /7: [IDIV, Eb]
  F7:
    form: /r
    /2: [NOT, Ev]
    /3: [NEG, Ev]
    /4: [MUL, Ev]
    /5: [IMUL, Ev]
    /6: [DIV, Ev]
    /7: [IDIV, Ev]
  FE:
    form: /r
    /0: [INC, Eb]
    /1: [DEC, Eb]
  FF:
    form: /r
    /0: [INC, Ev]
    /1: [DEC, Ev]
    /2: [CALL, Ev]
    /3: [CALLF, Mp]
    /4: [JMP, Ev]
    /5: [JMPF, Ap]
